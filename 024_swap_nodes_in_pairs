/*
Given a linked list, swap every two adjacent nodes and return its head.
*/
class Solution {
public:
    ListNode* swapPairs(ListNode* head) {
        
        if (!head || !head->next) return head;
    	ListNode* ret = head->next;    
        ListNode *t1, *t2, *prevnode;
        t1 = head;
        t2 = head->next;
        t1->next = t2->next;
        ret->next = t1;
        
        while (t1->next && t1->next->next) {
        	prevnode = t1;
        	t1 = prevnode->next;
        	t2 = prevnode->next->next;
        	prevnode->next = t2;
        	t1->next = t2->next;
        	t2->next = t1;
		}
        
        
        
        
        return ret;
    }
};
