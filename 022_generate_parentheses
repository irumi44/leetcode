/*
Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.
*/

class Solution {
public:
    std::vector<std::string> generateParenthesis(int n) {
        std::vector<std::string> ret;
        std::string s = "(";
        gen(n,1,0,&s,&ret);
        return ret;
    }
    
    void gen(int n, int x, int y, std::string* s, std::vector<std::string>* ret) {
        //std::cout<<n<<"\t"<<x<<"\t"<<y<<std::endl;
        if (x==y) {
        	if (x==n) {
        		(*ret).push_back(*s);
			} else {
				*s += "(";
        		gen(n,x+1,y,s,ret);
			}
		} else if (x==n) {
			*s += ")";
        	gen(n,x,y+1,s,ret);
		} else {
			
			std::string sx = *s;
			sx += "(";
			gen(n,x+1,y,&sx,ret);
			
			std::string sy = *s;
			sy += ")";
			gen(n,x,y+1,&sy,ret);	
		}
    }
};
