/*Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

The brackets must close in the correct order, "()" and "()[]{}" are all valid but "(]" and "([)]" are not.*/


class Solution {
public:
    bool isValid(std::string s) {
        //'(', ')', '{', '}', '[' , ']'
        std::stack<char> s1;
        
        for (int i = 0 ;i<s.length();i++) {
        	if (s[i] == ')') {
        		if (s1.size() == 0 ) return false;
        		else if (s1.top() == '(')	s1.pop();
        		else return false;
			}
			if (s[i] == ']') {
        		if (s1.size() == 0 ) return false;
        		else if (s1.top() == '[')	s1.pop();
        		else return false;
			}
			if (s[i] == '}') {
        		if (s1.size() == 0 ) return false;
        		else if (s1.top() == '{')	s1.pop();
        		else return false;
			}
			
			if (s[i] == '(' || s[i] == '{' || s[i] == '[') {
        		s1.push(s[i]);
			}
		}
		       
        return s1.size() == 0;
    }
};
